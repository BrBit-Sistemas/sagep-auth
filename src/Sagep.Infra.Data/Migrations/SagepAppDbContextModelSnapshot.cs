// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sagep.Infra.Data.Context;

#nullable disable

namespace Sagep.Infra.Data.Migrations
{
    [DbContext(typeof(SagepAppDbContext))]
    partial class SagepAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("UniqueKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 16, 40, 56, 522, DateTimeKind.Unspecified).AddTicks(3613), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9"),
                            IsDeleted = false,
                            Name = "Master",
                            TenantId = new Guid("206c645a-2966-4ad9-19a3-dced7c201bc4"),
                            UniqueKey = "ors0eAr4DPkvrwhy5gVnQAqRDnJUO43j9HzbkPyZ/7Q=",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 16, 40, 56, 522, DateTimeKind.Unspecified).AddTicks(3617), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTimeOffset>("MessageDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageLabel")
                        .HasColumnType("text");

                    b.Property<string>("MessageLabelColor")
                        .HasColumnType("text");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Scope")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("SenderUser")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationNotifications", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int[]>("Actions")
                        .HasColumnType("integer[]");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b0f96d85-3647-4651-9f78-b7529b577ec0",
                            Actions = new[] { 0 },
                            ConcurrencyStamp = "4629cea3-3b65-43b9-9c4e-7cc68fe4e4e4",
                            Description = "Pode realizar todas as ações/operações, bem como ter acesso a todos os dados e funcionalidades",
                            Name = "Master",
                            NormalizedName = "MASTER",
                            Subject = "all"
                        },
                        new
                        {
                            Id = "70e60ad2-e0f5-478b-ab32-ec5971c2daef",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "95c0135b-11bc-4f95-9c3c-128294d8bad6",
                            Description = "Pode realizar todas as ações/operações em todas as dashboards",
                            Name = "CanDashboardAll",
                            NormalizedName = "CANDASHBOARDALL",
                            Subject = "ac-dashboard-page"
                        },
                        new
                        {
                            Id = "080ab080-74d3-44a2-8816-9541022205bc",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "a9a72bbe-c90d-458b-84a6-70ef59984b0f",
                            Description = "Pode visualizar todas as dashboards do cliente",
                            Name = "CanDashboardClienteAll",
                            NormalizedName = "CANDASHBOARDCLIENTEALL",
                            Subject = "ac-dashboardCliente-page"
                        },
                        new
                        {
                            Id = "535452b1-abc9-4d6a-af78-423e7414468c",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "47f1e491-d8a7-4e3a-80bb-e840f33d3dae",
                            Description = "Pode visualizar todas as dashboards de controle de acesso",
                            Name = "CanDashboardControleAcessoAll",
                            NormalizedName = "CANDASHBOARDCONTROLEACESSOALL",
                            Subject = "ac-dashboardControleAcesso-page"
                        },
                        new
                        {
                            Id = "35dbd113-ae96-4180-ad4d-5f8e123fa6fa",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "73a6f7e1-6717-4326-8957-a97709358028",
                            Description = "Pode realizar todas as ações/operações em todos os usuários",
                            Name = "CanUserAll",
                            NormalizedName = "CANUSERALL",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "32cbb415-ff31-42b7-9490-98c00d293000",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "d7f2c286-b09b-4d56-959a-792d8185290b",
                            Description = "Pode listar os dados de todos os usuários",
                            Name = "CanUserList",
                            NormalizedName = "CANUSERLIST",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "884c91d3-2441-49c7-a094-5882f4273098",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "70862be1-c897-471c-85cf-3879e2c701b2",
                            Description = "Pode listar os dados de um usuários",
                            Name = "CanUserRead",
                            NormalizedName = "CANUSERREAD",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "2b40ff56-bf43-40a9-868d-2b7d976a5fc1",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "1817b5b7-7a8d-4ab3-90bc-d6093751310d",
                            Description = "Pode criar um usuário",
                            Name = "CanUserCreate",
                            NormalizedName = "CANUSERCREATE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "68adee0f-c803-421d-8526-24c3840180b5",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "c3947aa5-4590-4e37-843b-b48c8955ebd5",
                            Description = "Pode atualizar os dados de um usuário",
                            Name = "CanUserUpdate",
                            NormalizedName = "CANUSERUPDATE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "a257e78b-5248-4738-9859-f0132c3c6788",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "b095dbb5-7389-4de4-9d9b-2879e30af6fe",
                            Description = "Pode deletar um usuário",
                            Name = "CanUserDelete",
                            NormalizedName = "CANUSERDELETE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "3743d42e-ed01-4f9a-9a93-0ae6bad5b77f",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "a6b2791f-ecf4-4ebb-8eb1-5a2494f6a10f",
                            Description = "Pode realizar todas as ações/operações em todos as roles/permissões",
                            Name = "CanRoleAll",
                            NormalizedName = "CANROLEALL",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "89477a44-b69d-409b-a4ed-9836a444eba8",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "fb46db5e-da08-467a-8c6d-5bbbc0df24dd",
                            Description = "Pode listar os dados de todas as roles/permissões",
                            Name = "CanRoleList",
                            NormalizedName = "CANROLELIST",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "6ee0874b-a22a-4684-9823-079d34cefbec",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "5c5f40e7-2e75-4028-a67e-a0887b4e11c4",
                            Description = "Pode listar os dados de uma roles/permissão",
                            Name = "CanRoleRead",
                            NormalizedName = "CANROLEREAD",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "347ff9ef-13b2-4f23-895f-eac7f1cc2a43",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "12b20c2b-22ee-480b-9486-d7b46623df91",
                            Description = "Pode criar uma role/permissão",
                            Name = "CanRoleCreate",
                            NormalizedName = "CANROLECREATE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "b6d34855-c6a5-4e5c-8a2c-0ee87b8cf0a9",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "a4acb3ce-329b-49de-9137-c627b127b446",
                            Description = "Pode atualizar os dados de uma roles/permissão",
                            Name = "CanRoleUpdate",
                            NormalizedName = "CANROLEUPDATE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "b4354228-da54-4202-98ef-a833364f5945",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "0263e7d8-ff1c-43a1-b154-4c6f51fc5be1",
                            Description = "Pode deletar uma role/permissão",
                            Name = "CanRoleDelete",
                            NormalizedName = "CANROLEDELETE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "13d766f8-6058-4736-b691-2fd0a686761f",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "1f45e244-3cce-4eaa-81b8-09fa197934a1",
                            Description = "Pode realizar todas as ações/operações em todos os grupos",
                            Name = "CanGroupAll",
                            NormalizedName = "CANGROUPALL",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "6002fd3e-25cf-4b14-852a-b23dc0632f4a",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "517c61a8-cc00-4543-a9fc-b56f997edc1b",
                            Description = "Pode listar os dados de todos os grupos",
                            Name = "CanGroupList",
                            NormalizedName = "CANGROUPLIST",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "b46580b0-f1e6-4ba2-8a82-1f715294a624",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "a7f8a0bb-8516-49ef-ba3e-fcf18c3a703e",
                            Description = "Pode listar os dado de um grupo",
                            Name = "CanGroupRead",
                            NormalizedName = "CANGROUPREAD",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "cfb1eb4b-9ff9-4fed-bd04-6fee862e9986",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "0a06f2f5-ceb8-454b-97ab-a8d2df0ff04a",
                            Description = "Pode criar um grupo",
                            Name = "CanGroupCreate",
                            NormalizedName = "CANGROUPCREATE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "1beda096-7932-4470-9898-32175c3635e9",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "85a0481d-cc86-4080-bc93-53fb1d9840bb",
                            Description = "Pode atualizar os dados de um grupo",
                            Name = "CanGroupUpdate",
                            NormalizedName = "CANGROUPUPDATE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "58fbef7a-ee1d-49e7-9ebc-696e68359b61",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "27f21d24-6b92-4af6-9d81-a3bc8f445db4",
                            Description = "Pode deletar um grupo",
                            Name = "CanGroupDelete",
                            NormalizedName = "CANGROUPDELETE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "d51e71d9-7e8e-45a6-9842-9a893fd293a6",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "8c7529d1-5db2-489d-aa31-9d6780a27acf",
                            Description = "Pode visualizar todos os indicadores da dashboard comercial",
                            Name = "CanClienteAll",
                            NormalizedName = "CANCLIENTEALL",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "a3b18a5f-443e-44bf-a6ff-75043b0f55b4",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "67403820-9c53-490e-a6a5-81a46e5fdb37",
                            Description = "Pode listar os dados de todos os clientes",
                            Name = "CanClienteList",
                            NormalizedName = "CANCLIENTELIST",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "cc1badab-56bf-4691-ac1f-e55ccd65fbbb",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "52c00964-11b2-4eeb-9df1-784e242da6c1",
                            Description = "Pode listar os dado de um cliente",
                            Name = "CanClienteRead",
                            NormalizedName = "CANCLIENTEREAD",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "b38c0667-aff9-40ed-a33c-bd1cca752824",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "119d5f52-a10d-41d4-9ff5-1a287094fba6",
                            Description = "Pode criar um cliente",
                            Name = "CanClienteCreate",
                            NormalizedName = "CANCLIENTECREATE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "11ea61da-45d5-4809-a047-1e3f310a5e51",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "f2ffee85-2c14-4f1e-b197-d3b3d20a7b08",
                            Description = "Pode atualizar os dados de um cliente",
                            Name = "CanClienteUpdate",
                            NormalizedName = "CANCLIENTEUPDATE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "2936fd4d-14e5-433b-b61e-3a51d003bea2",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "bfd6c288-1322-4376-9399-9f8c87de91b5",
                            Description = "Pode deletar um cliente",
                            Name = "CanClienteDelete",
                            NormalizedName = "CANCLIENTEDELETE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "6e81171c-750e-4984-ac49-525f907cfb6a",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "044ffe17-4774-4bee-bfec-7fa554746c1f",
                            Description = "Pode listar o título do sistema",
                            Name = "CanTitleSystemList",
                            NormalizedName = "CANTITLESYSTEMLIST",
                            Subject = "ac-titleSystem-page"
                        },
                        new
                        {
                            Id = "f25608ef-5dcf-4a95-ae5b-42643bd41725",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "870fa388-3244-4954-b851-50223afe1ce0",
                            Description = "Pode listar o título dos negócios",
                            Name = "CanTitleBussinesList",
                            NormalizedName = "CANTITLEBUSSINESLIST",
                            Subject = "ac-titleBussines-page"
                        },
                        new
                        {
                            Id = "7994df4e-c691-496a-8535-41175189f492",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "69ba1684-e965-487e-8174-81b449adbe0c",
                            Description = "Pode realizar todas as ações/operações em todos os serviços de clientes",
                            Name = "CanClienteServicoAll",
                            NormalizedName = "CANCLIENTESERVICOALL",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "c55b45b7-9416-40b2-878b-17b49fcd0b28",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "454a02c5-1df0-45a9-87e5-5a585ad1c1da",
                            Description = "Pode listar os dados de todos os serviços de clientes",
                            Name = "CanClienteServicoList",
                            NormalizedName = "CANCLIENTESERVICOLIST",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "78d5963b-661c-46e7-afae-79e91fafb80b",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "31b96f70-4984-4d38-919d-8ffc7c8469b4",
                            Description = "Pode listar os dado de um serviço de cliente",
                            Name = "CanClienteServicoRead",
                            NormalizedName = "CANCLIENTESERVICOREAD",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "a62758e2-2a8c-447a-b937-9f7c2b3293fe",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "27165720-e568-475e-b4e7-e2dc10dd59f3",
                            Description = "Pode criar um serviço para um cliente",
                            Name = "CanClienteServicoCreate",
                            NormalizedName = "CANCLIENTESERVICOCREATE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "1d6eea0b-03ff-4f9a-bd23-57087cdf801f",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "a4a9cc6b-7469-4d38-8c1d-c70444630976",
                            Description = "Pode atualizar um serviço de um cliente",
                            Name = "CanClienteServicoUpdate",
                            NormalizedName = "CANCLIENTESERVICOUPDATE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "d3ad6cf6-2c87-460c-bd86-981187de6116",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "896d7840-639c-4308-b1fb-93a913fe7422",
                            Description = "Pode deletar um serviço de um cliente",
                            Name = "CanClienteServicoDelete",
                            NormalizedName = "CANCLIENTESERVICODELETE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "c15d6bca-9bd4-4552-8561-f888baf900c7",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "29deca97-c260-4158-b86c-b92111f53643",
                            Description = "Pode realizar todas as ações/operações em todos os serviços",
                            Name = "CanServicoAll",
                            NormalizedName = "CANSERVICOALL",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "43d65165-4e77-4c8a-a88a-87a6b12f534b",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "3d749027-ae01-4781-8f4a-ec3c5046a529",
                            Description = "Pode listar os dados de todos os serviços",
                            Name = "CanServicoList",
                            NormalizedName = "CANSERVICOLIST",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "d7e1338b-0ec4-40a9-9f43-2038cbb0e104",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "cbac4c4f-0de2-431f-a690-255513d9563c",
                            Description = "Pode listar os dados de um serviço",
                            Name = "CanServicoRead",
                            NormalizedName = "CANSERVICOREAD",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "8de83a31-9ec3-4bbf-b5c2-4a237c63f42c",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "98254055-67d5-40b6-bb5a-7e369539d872",
                            Description = "Pode atualizar um serviço",
                            Name = "CanServicoUpdate",
                            NormalizedName = "CANSERVICOUPDATE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "e151275d-523a-4bd0-9dfc-d419968859ae",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "66c23ce5-8234-4880-9322-a360af3dee06",
                            Description = "Pode criar um serviço",
                            Name = "CanServicoCreate",
                            NormalizedName = "CANSERVICOCREATE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "3acdfb7a-21ca-45fd-b872-7cc24210f8ff",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "cdd62684-cb8c-4b99-be07-bbd3868f4d80",
                            Description = "Pode deletar um serviço",
                            Name = "CanServicoDelete",
                            NormalizedName = "CANSERVICODELETE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "6be47053-0c89-4071-804f-02eedaadf9f2",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "cbdabd7a-63f9-4f81-8673-2e55854284b8",
                            Description = "Pode realizar todas as ações/operações em todos os pipelines",
                            Name = "CanPipelineAll",
                            NormalizedName = "CANPIPELINEALL",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "de8b08fa-2386-4535-8413-e25ae4c9417f",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "8f15ddfb-d5ec-4107-b3b1-feb64be02b19",
                            Description = "Pode listar os dados de todos os pipelines",
                            Name = "CanPipelineList",
                            NormalizedName = "CANPIPELINELIST",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "54795bfc-36d1-4fb6-be57-181003a89496",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "f6ab3e63-ec54-4cce-bc93-741e898d0aa3",
                            Description = "Pode listar os dados de um pipeline",
                            Name = "CanPipelineRead",
                            NormalizedName = "CANPIPELINEREAD",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "1e6e1f34-5145-494a-802c-8b9ae12e14bc",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "d7a8e5f2-67c6-48f8-a83f-e1e14d409c3c",
                            Description = "Pode criar um pipeline",
                            Name = "CanPipelineCreate",
                            NormalizedName = "CANPIPELINECREATE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "6389b3ee-7201-4ae2-a25d-fda06a1a2133",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "35720d0b-697b-4854-9a69-d26bb6f8e3f6",
                            Description = "Pode atualizar um pipeline",
                            Name = "CanPipelineUpdate",
                            NormalizedName = "CANPIPELINEUPDATE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "1bfb2043-1a06-431d-94fd-d5c20815ae23",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "46192ec1-76ba-452f-bbd0-eb77b983e06d",
                            Description = "Pode deletar um pipeline",
                            Name = "CanPipelineDelete",
                            NormalizedName = "CANPIPELINEDELETE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "89719049-b438-4b9a-ba6a-ea0417c2a655",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "8564d53c-f596-4889-824b-66919e4f2fc7",
                            Description = "Pode realizar todas as ações/operações em todos os fornecedores",
                            Name = "CanFornecedorAll",
                            NormalizedName = "CANFORNECEDORALL",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "a1b51109-adb6-401d-97b0-07bd844c0b61",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "7466cc77-2ebc-47f1-8aaa-718d03d1eda2",
                            Description = "Pode listar os dados de todos os fornecedores",
                            Name = "CanFornecedorList",
                            NormalizedName = "CANFORNECEDORLIST",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "8d2da32e-e3e2-46d9-a12a-69dcc30bbbe0",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "35b30baa-6ad0-486c-bdf5-33bbc1b69202",
                            Description = "Pode listar os dados de um fornecedor",
                            Name = "CanFornecedorRead",
                            NormalizedName = "CANFORNECEDORREAD",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "c5db78d0-7dca-4e8b-a28f-a9b21313613f",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "0d59a83c-6970-49c2-98b7-8beba016d32e",
                            Description = "Pode criar um fornecedor",
                            Name = "CanFornecedorCreate",
                            NormalizedName = "CANFORNECEDORCREATE",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "0c703371-16df-4a3d-ab3a-6776e0cc5476",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "35520ad0-4663-4168-bdbc-5c090b64284b",
                            Description = "Pode atualizar um fornecedor",
                            Name = "CanFornecedorUpdate",
                            NormalizedName = "CANFORNECEDORUPDATE",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "9ec64f4c-c84c-45f9-ad83-94b4f9dfcbc4",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "64ba1ad9-81bd-45e9-9c83-d31095824d72",
                            Description = "Pode deletar um fornecedor",
                            Name = "CanForncedorDelete",
                            NormalizedName = "CANFORNCEDORDELETE",
                            Subject = "ac-forncedor-page"
                        },
                        new
                        {
                            Id = "5a7611ad-e74c-49e8-8623-c3597c74f0b3",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "2dec7d0f-4c42-4d1d-b328-7a46406d0ab1",
                            Description = "Pode realizar todas as ações/operações em todos os serviços de fornecedores",
                            Name = "CanFornecedorServicoAll",
                            NormalizedName = "CANFORNECEDORSERVICOALL",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "bc460513-284f-4421-bcfb-b260e7071ccb",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "d9319c9e-d8c9-46e1-917e-eee1a90a036b",
                            Description = "Pode listar os dados de todos os serviços de fornecedores",
                            Name = "CanFornecedorServicoList",
                            NormalizedName = "CANFORNECEDORSERVICOLIST",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "4af1b72d-9650-4a24-a23f-f718a71c88b7",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "f5a75a1b-e326-4528-b696-8f848e98fd21",
                            Description = "Pode listar os dado de um serviço de fornecedor",
                            Name = "CanFornecedorServicoRead",
                            NormalizedName = "CANFORNECEDORSERVICOREAD",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "ec45616c-e773-436a-9463-197ca0a6122d",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "85e6f662-dfb7-4fbd-b74d-015fb23ecc6b",
                            Description = "Pode criar um serviço para um fornecedor",
                            Name = "CanFornecedorServicoCreate",
                            NormalizedName = "CANFORNECEDORSERVICOCREATE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "1facdce1-3ebe-4142-97e5-f107eda3e274",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "0e19c117-05c5-46e2-ae86-c8df211de27e",
                            Description = "Pode atualizar um serviço de um fornecedor",
                            Name = "CanFornecedorServicoUpdate",
                            NormalizedName = "CANFORNECEDORSERVICOUPDATE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "550290ad-a335-41f0-af2e-ae6070a7a19f",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "ca35c4e5-76e5-42a2-8d28-8deb65873049",
                            Description = "Pode deletar um serviço de um fornecedor",
                            Name = "CanFornecedorServicoDelete",
                            NormalizedName = "CANFORNECEDORSERVICODELETE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "07c58b99-3541-4485-ac53-c296bcd17060",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "0b163d3f-0cc3-47ba-a782-82a7d480db51",
                            Description = "Pode realizar todas as ações/operações em todos os produtos",
                            Name = "CanProdutoAll",
                            NormalizedName = "CANPRODUTOALL",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "aa50a4e3-9647-43ba-bbd2-a6d2ce86636c",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "bfe5c0c8-f19c-4c41-953a-d51b89e14349",
                            Description = "Pode listar os dados de todos os produtos",
                            Name = "CanProdutoList",
                            NormalizedName = "CANPRODUTOLIST",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "278b2bc2-69e1-48fa-b64a-a62bdee353a8",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "6a930a0c-1910-40f7-a971-eec30b0c1c81",
                            Description = "Pode listar os dados de um produtos",
                            Name = "CanProdutoRead",
                            NormalizedName = "CANPRODUTOREAD",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "6b5ed0a2-53c8-4957-9f4f-a2e46b535ed3",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "9bd94ca2-4712-473d-9b05-8e62cc6ceb72",
                            Description = "Pode criar um produtos",
                            Name = "CanProdutoCreate",
                            NormalizedName = "CANPRODUTOCREATE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "58a17501-b6e7-4f5c-a4e6-06250e82ae9f",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "9140a188-9aeb-4b0a-9419-8112cbc0ea9c",
                            Description = "Pode atualizar um produtos",
                            Name = "CanProdutoUpdate",
                            NormalizedName = "CANPRODUTOUPDATE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "a08c5234-4cf9-4296-ad34-730135fe1f20",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "c846ace6-9915-4301-82d5-670c5d1500a9",
                            Description = "Pode deletar um produtos",
                            Name = "CanProdutoDelete",
                            NormalizedName = "CANPRODUTODELETE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "3863dc8f-e59d-4565-a35c-6f3ec3e09bfd",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "af095993-1403-40cf-b9a7-b29795569719",
                            Description = "Pode realizar todas as ações/operações em todos os contratos de clientes",
                            Name = "CanClienteContratoAll",
                            NormalizedName = "CANCLIENTECONTRATOALL",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "2cc5d905-2e85-43c7-a8a8-bc8e4e24d79a",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f4ba2c94-4374-4ece-887a-9a503bff9f0c",
                            Description = "Pode listar os dados de todos os contratos de clientes",
                            Name = "CanClienteContratoList",
                            NormalizedName = "CANCLIENTECONTRATOLIST",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "d85eb0e6-3838-41df-8733-dc726131cb04",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "1d68b5bf-683a-473b-b628-846a04d49c7a",
                            Description = "Pode listar os dados de um contrato de cliente",
                            Name = "CanClienteContratoRead",
                            NormalizedName = "CANCLIENTECONTRATOREAD",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "d56cc7a7-87c2-4daa-b649-6baf1f54c5ed",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "d95b12a9-be38-4ed4-9453-d9339f718ff0",
                            Description = "Pode criar um contrato de cliente",
                            Name = "CanClienteContratoCreate",
                            NormalizedName = "CANCLIENTECONTRATOCREATE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "434c1963-7d5e-4545-ade4-445ed5cf40db",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "c334e83b-3f93-4e2b-a5b9-f992d3489d45",
                            Description = "Pode atualizar um contrato de cliente",
                            Name = "CanClienteContratoUpdate",
                            NormalizedName = "CANCLIENTECONTRATOUPDATE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "0179357a-4cef-4fe7-b470-89f95ba8412b",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "43be1f40-e532-4757-9ed5-fd00b14358ed",
                            Description = "Pode deletar um contrato de cliente",
                            Name = "CanClienteContratoDelete",
                            NormalizedName = "CANCLIENTECONTRATODELETE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "95e78aa1-062b-478a-b011-fca063cfb95c",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "aabbc520-2dfd-4c23-96a9-9bf45f3552ac",
                            Description = "Pode realizar todas as ações/operações em todos os produtos de clientes",
                            Name = "CanClienteProdutoAll",
                            NormalizedName = "CANCLIENTEPRODUTOALL",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "23a38028-8ebb-447e-b9bc-fdf56da09863",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "482ca4bc-1da6-4f61-9b0f-528ec587585c",
                            Description = "Pode listar os dados de todos os produtos de clientes",
                            Name = "CanClienteProdutoList",
                            NormalizedName = "CANCLIENTEPRODUTOLIST",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "b20e3d7c-5ee7-4ffd-85ad-9b8a4711ea0c",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "e27bdb56-62cb-45ff-8c99-7179798887f4",
                            Description = "Pode listar os dados de um produto de cliente",
                            Name = "CanClienteProdutoRead",
                            NormalizedName = "CANCLIENTEPRODUTOREAD",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "1af46fbf-57de-4ac2-a64d-77f5c04db6c3",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "615d0446-629c-48e9-92bc-f2a40ff73b12",
                            Description = "Pode criar um produto de cliente",
                            Name = "CanClienteProdutoCreate",
                            NormalizedName = "CANCLIENTEPRODUTOCREATE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "3dd6281b-925f-4d67-a93d-11923d71ee0e",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "e947e454-76b2-43d4-9ec3-91eea1c952ea",
                            Description = "Pode atualizar um produto de cliente",
                            Name = "CanClienteProdutoUpdate",
                            NormalizedName = "CANCLIENTEPRODUTOUPDATE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "418ee2f7-95fb-4638-acb2-ef4367b85112",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "a2a08b33-1e68-4f2a-9517-7fe49627308b",
                            Description = "Pode deletar um produto de cliente",
                            Name = "CanClienteProdutoDelete",
                            NormalizedName = "CANCLIENTEPRODUTODELETE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "0ea51ca8-ccb7-4578-ab89-33413b44a7aa",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "01d24fb9-51ee-4203-a6a8-b2180c3868dc",
                            Description = "Pode realizar todas as ações/operações em todos os produtos de fornecedores",
                            Name = "CanFornecedorProdutoAll",
                            NormalizedName = "CANFORNECEDORPRODUTOALL",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "eea25f13-ed84-4dd2-a49b-80903b6b6318",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f47bad89-a059-44e8-94c8-4d4109d5e1a0",
                            Description = "Pode listar os dados de todos os produtos de fornecedores",
                            Name = "CanFornecedorProdutoList",
                            NormalizedName = "CANFORNECEDORPRODUTOLIST",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "a8b16d9e-c0ff-4a7c-9ae2-4802205a1f7d",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "2324081b-022b-4520-a44c-09b681490b0b",
                            Description = "Pode listar os dados de um produto de fornecedor",
                            Name = "CanFornecedorProdutoRead",
                            NormalizedName = "CANFORNECEDORPRODUTOREAD",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "15597aa7-449a-42f9-9e9e-a2f14aac77ac",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "c583ed89-e6b6-4e6f-b987-9db5a039683b",
                            Description = "Pode visualizar um produto de fornecedor",
                            Name = "CanFornecedorProdutoCreate",
                            NormalizedName = "CANFORNECEDORPRODUTOCREATE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "8a83b6c2-2571-42b9-8918-fff4552edf23",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "8f8be97d-87b6-4271-8577-7bc3d1f444fb",
                            Description = "Pode criar um produto de fornecedor",
                            Name = "CanFornecedorProdutoUpdate",
                            NormalizedName = "CANFORNECEDORPRODUTOUPDATE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "c7c84d59-67b1-47e3-9aed-d2747a204cce",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "aabf378d-53df-450b-a672-b8c37fe511ba",
                            Description = "Pode deletar um produto de fornecedor",
                            Name = "CanFornecedorProdutoDelete",
                            NormalizedName = "CANFORNECEDORPRODUTODELETE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "7b9b17e3-067e-4236-be45-764308296ad7",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "23a0c210-a2a6-4369-a156-d9e06d860845",
                            Description = "Pode realizar todas as ações/operações em dashboard comercial",
                            Name = "CanDashboardComercialAll",
                            NormalizedName = "CANDASHBOARDCOMERCIALALL",
                            Subject = "ac-dashboardComercial-page"
                        },
                        new
                        {
                            Id = "371fb750-a5e1-4414-b668-ed704180d972",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "68e6445b-7e10-4d9c-b973-55135b4fc696",
                            Description = "CanDashboardComercialClienteContratoList",
                            Name = "CanDashboardComercialClienteContratoList",
                            NormalizedName = "CANDASHBOARDCOMERCIALCLIENTECONTRATOLIST",
                            Subject = "ac-dashboardComercialClienteContrato-page"
                        },
                        new
                        {
                            Id = "fc8d5177-1e59-4259-bf27-4d1402fc04e1",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "65270040-bbed-47db-83b3-ad59af87760d",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroAll",
                            NormalizedName = "CANCHAVEAPITERCEIROALL",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "8a6a25ff-511b-4672-9126-dc44e6ec2e85",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "0d4563b5-58ae-4a51-8c3c-a64579ec6f57",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroList",
                            NormalizedName = "CANCHAVEAPITERCEIROLIST",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "09767577-6c94-4c62-8364-cc75f33554bd",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "d0cb01d0-6626-4f9c-bb51-4996b1e55beb",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroRead",
                            NormalizedName = "CANCHAVEAPITERCEIROREAD",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "5ebf7cc1-2758-486a-8664-b70ab92673e9",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "939f69cf-84d1-4be2-9b96-ef975adc5793",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroCreate",
                            NormalizedName = "CANCHAVEAPITERCEIROCREATE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "ef499dd3-07f2-4e7a-9d0e-be357df61d3c",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "b7c6a074-9e6e-45f0-a58e-e9ce0ed052d5",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroUpdate",
                            NormalizedName = "CANCHAVEAPITERCEIROUPDATE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "865b8a41-dcdb-4db2-b9e8-55f849660562",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "2d52fbf8-34b7-4809-8fa8-f5f45d0f028d",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroDelete",
                            NormalizedName = "CANCHAVEAPITERCEIRODELETE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "eb45344e-eea0-41c6-b1c9-d0591f10ee9d",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "33bfe76e-ba76-427a-9af8-9f781f9451fe",
                            Description = "Pode realizar todas as ações/operações em dashboard publica",
                            Name = "CanDashboardPublicaAll",
                            NormalizedName = "CANDASHBOARDPUBLICAALL",
                            Subject = "ac-dashboardPublica-page"
                        },
                        new
                        {
                            Id = "0a4f1564-159b-4f4d-badd-f5ce181a5b86",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "e83db08b-8696-466f-b95b-2927490b48ca",
                            Description = "CanDashboardPublicaClienteContratoList",
                            Name = "CanDashboardPublicaClienteContratoList",
                            NormalizedName = "CANDASHBOARDPUBLICACLIENTECONTRATOLIST",
                            Subject = "ac-dashboardPublicaClienteContrato-page"
                        },
                        new
                        {
                            Id = "8fc421f6-44fb-41ca-9a20-97bea2cb2027",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "4d5424b4-0d5d-40da-8f4f-5b3ea54f35e7",
                            Description = "Pode realizar todas as ações/operações em todos os vendedores",
                            Name = "CanVendedorAll",
                            NormalizedName = "CANVENDEDORALL",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "d08969a5-9b9c-4298-918d-84a9245c2d5c",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "19be0345-b903-4e80-93be-176fd25e2f1d",
                            Description = "Pode listar os dados de todos os vendedores",
                            Name = "CanVendedorList",
                            NormalizedName = "CANVENDEDORLIST",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "d91b8dc4-c920-4d2b-9dfd-b8ad7020c268",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "3c7b20ce-ca03-4495-baa2-3fe6e5f30cac",
                            Description = "Pode listar os dados de um vendedor",
                            Name = "CanVendedorRead",
                            NormalizedName = "CANVENDEDORREAD",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "f54526ea-5c75-4c61-8f1f-0ce6c3c5c2f9",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "2c7c74ac-2424-427f-802a-84835f1dc113",
                            Description = "Pode visualizar um vendedor",
                            Name = "CanVendedorCreate",
                            NormalizedName = "CANVENDEDORCREATE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "49cd5976-8e60-4de9-ab42-f94a4746b824",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "55fd5ad7-410e-46c2-b8e7-cf028e0165f8",
                            Description = "Pode criar um vendedor",
                            Name = "CanVendedorUpdate",
                            NormalizedName = "CANVENDEDORUPDATE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "07cc33b6-adfc-4f2b-8368-e84e8f34d984",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "d7148354-a284-4d86-879d-8a7848840a04",
                            Description = "Pode deletar um vendedor",
                            Name = "CanVendedorDelete",
                            NormalizedName = "CANVENDEDORDELETE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "879e5d4e-6d61-4da1-bfbb-d6d61e0fe7cf",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "f48549eb-241b-49b1-8fae-f4376a0e6ed7",
                            Description = "Pode realizar todas as ações/operações em todas as comissões de vendedores",
                            Name = "CanVendedorComissaoAll",
                            NormalizedName = "CANVENDEDORCOMISSAOALL",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "30f7664f-a6da-4f59-9f5d-1ed94d54d520",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "25720251-b222-488b-b13c-7cb78ea939f7",
                            Description = "Pode listar os dados de comissão de vendedores",
                            Name = "CanVendedorComissaoList",
                            NormalizedName = "CANVENDEDORCOMISSAOLIST",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "0931f9df-3673-4073-b71f-fcca992b4bfb",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "454380ed-51ac-4a78-8910-b8fc3fe593ca",
                            Description = "Pode listar os dados de uma comissão de vendedor",
                            Name = "CanVendedorComissaoRead",
                            NormalizedName = "CANVENDEDORCOMISSAOREAD",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "9026bed6-13dc-465d-a989-bac4908b0151",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "5331635e-eb3e-4437-ad36-a1007bbf5c96",
                            Description = "Pode visualizar uma comissão de vendedor",
                            Name = "CanVendedorComissaoCreate",
                            NormalizedName = "CANVENDEDORCOMISSAOCREATE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "0fdd5d6d-6f81-4f48-805f-f7d78dc64618",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "19e41b17-d12c-4eea-b00d-fb89e1e8fa4c",
                            Description = "Pode criar uma comissão de vendedor",
                            Name = "CanVendedorComissaoUpdate",
                            NormalizedName = "CANVENDEDORCOMISSAOUPDATE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "86a9d842-77ce-433d-9349-483bf87ca313",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "485d2083-0ce9-4192-82cb-46b2cf0b5dad",
                            Description = "Pode deletar uma comissão de vendedor",
                            Name = "CanVendedorComissaoDelete",
                            NormalizedName = "CANVENDEDORCOMISSAODELETE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "824ba7d5-e183-4426-9c7e-6ab78b2bddd3",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "395a846f-feb9-4b76-8801-e148198d4534",
                            Description = "Pode realizar todas as ações/operações em todos os contratos vinculados a vendedores",
                            Name = "CanVendedorContratoAll",
                            NormalizedName = "CANVENDEDORCONTRATOALL",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "9211fbeb-41a6-4c07-bdf9-0a8d6199ccde",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "b58f9ed8-fe13-4fdc-9c87-e42a59bed6e0",
                            Description = "Pode listar os dados de todos os contratos vinculados a vendedores",
                            Name = "CanVendedorContratoList",
                            NormalizedName = "CANVENDEDORCONTRATOLIST",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "0353aa6f-c251-4e5a-a74c-ef8933904f77",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "c942eaf5-4c68-4842-8f92-bd38908a1fd9",
                            Description = "Pode listar os dados de um contrato vinculado a um vendedor",
                            Name = "CanVendedorContratoRead",
                            NormalizedName = "CANVENDEDORCONTRATOREAD",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "0e13d4e2-5858-4c63-a2f0-779974eb6e5e",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "c22f9b25-e695-4e8b-bad3-8d774e83f368",
                            Description = "Pode visualizar um contrato vinculado a um ou vários vendedores",
                            Name = "CanVendedorContratoCreate",
                            NormalizedName = "CANVENDEDORCONTRATOCREATE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "824f5f77-96c8-4f11-96b7-7bde39323b27",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "cd842aa6-88b7-40c0-800f-657ecb4390a9",
                            Description = "Pode criar um vínculo de contrato a um vendedor",
                            Name = "CanVendedorContratoUpdate",
                            NormalizedName = "CANVENDEDORCONTRATOUPDATE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "299faf71-3172-4f5b-8b81-1870afbcb882",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "136ff6a0-d4eb-481f-8dfd-7728f41e5b5e",
                            Description = "Pode deletar um vínculo de contrato com um vendedor",
                            Name = "CanVendedorContratoDelete",
                            NormalizedName = "CANVENDEDORCONTRATODELETE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "e3785174-ce5f-4ae0-b45a-40778c605501",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "101e9258-bb73-4c4e-94e6-099b88f0c970",
                            Description = "Pode realizar todas as ações/operações em todas as faturas de contratos de clientes",
                            Name = "CanClienteContratoFaturaAll",
                            NormalizedName = "CANCLIENTECONTRATOFATURAALL",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "d2e89c55-ee22-4aed-be3f-8bd8e16b5b56",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "b832e2c3-6082-4394-b1c8-64ebaca34bbe",
                            Description = "Pode listar os dados de todas as faturas de contratos de clientes",
                            Name = "CanClienteContratoFaturaList",
                            NormalizedName = "CANCLIENTECONTRATOFATURALIST",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "e731ce7e-fe85-42d1-8f5e-3053f8c2edb8",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "b980171c-9238-41e7-a40e-768e0a192370",
                            Description = "Pode listar os dados de uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaRead",
                            NormalizedName = "CANCLIENTECONTRATOFATURAREAD",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "799e79ca-ea94-48e9-a7f1-d7a8584af5e3",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "3bcf3bbc-35ad-413b-b938-c5752ab80e0b",
                            Description = "Pode visualizar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaCreate",
                            NormalizedName = "CANCLIENTECONTRATOFATURACREATE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "faad94bf-42b4-4880-9313-f08cc1fd59fd",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "709e5bd9-c506-4d76-a365-2ea7fd745898",
                            Description = "Pode criar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaUpdate",
                            NormalizedName = "CANCLIENTECONTRATOFATURAUPDATE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "7a486cf1-ab2e-4042-a4e5-a38e8a4bdc0e",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "a4d74618-b3fd-4b0c-8027-335924582eca",
                            Description = "Pode deletar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaDelete",
                            NormalizedName = "CANCLIENTECONTRATOFATURADELETE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "a76ae720-c60c-48ed-92b2-c993bdb78b92",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "a2e937e9-5418-4db6-92e3-075bc6a9b216",
                            Description = "Pode realizar todas as ações/operações relacionadas a entidade de sistema rotina",
                            Name = "CanRotinaAll",
                            NormalizedName = "CANROTINAALL",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "4e572975-6881-4671-b339-20e3b54c0306",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "9167c84d-a5f5-46c5-b471-5052c9a2343f",
                            Description = "Pode listar todas as rotinas de sistema",
                            Name = "CanRotinaList",
                            NormalizedName = "CANROTINALIST",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "d14fd503-fadd-4d5d-ab18-f8e1e92b4817",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "bc02651b-557b-484e-9217-7a093a4c0103",
                            Description = "Pode atualizar os dados de rotinas",
                            Name = "CanRotinaUpdate",
                            NormalizedName = "CANROTINAUPDATE",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "0605f798-8a49-43db-b71b-6d57b8cd5e08",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "aff3ff6d-085e-4049-b399-29b905611d48",
                            Description = "Pode listar os dados de uma rotina",
                            Name = "CanRotinaRead",
                            NormalizedName = "CANROTINAREAD",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "95a2cf5e-4d12-43e0-a2eb-52ed8e7c8388",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "576ce5d8-61ff-4761-a224-8b5a75c6b711",
                            Description = "Pode realizar todas as ações/operações relacionadas a entidade rotina event history",
                            Name = "CanRotinaEventHistoryAll",
                            NormalizedName = "CANROTINAEVENTHISTORYALL",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "8d9e59e7-50f0-4cc2-a8d5-246b31966809",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "dc195de2-4a57-412d-8883-60a88d779845",
                            Description = "Pode listar todas as rotinas events histories",
                            Name = "CanRotinaEventHistoryList",
                            NormalizedName = "CANROTINAEVENTHISTORYLIST",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "fa95f57b-98f0-4fcf-913e-1a1b65557f2c",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "dbcf203e-872a-4b66-9636-8e9d819392e9",
                            Description = "Pode listar os dados de uma rotina event history",
                            Name = "CanRotinaEventHistoryRead",
                            NormalizedName = "CANROTINAEVENTHISTORYREAD",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "a0315302-df87-49a9-ae22-0bfb4ea04c87",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f2d862e9-2125-461e-9d47-344bd7a6d133",
                            Description = "Pode realizar todas as ações/operações relacionadas a relatórios de vendedores",
                            Name = "CanVendedorRelatorioComissaoList",
                            NormalizedName = "CANVENDEDORRELATORIOCOMISSAOLIST",
                            Subject = "ac-vendedorRelatorioComissao-page"
                        },
                        new
                        {
                            Id = "96df3754-247b-4984-8ad6-334a94134d6f",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "0f4306cd-4395-4b3c-aadd-a5f0e66db832",
                            Description = "Pode listar todas as rotinas events histories",
                            Name = "CanVendedorRelatorioAll",
                            NormalizedName = "CANVENDEDORRELATORIOALL",
                            Subject = "ac-vendedorRelatorio-page"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRoleGroup", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("RoleId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("AspNetRoleGroups", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = "b0f96d85-3647-4651-9f78-b7529b577ec0",
                            GroupId = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DataAniversario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("Funcao")
                        .HasColumnType("integer");

                    b.Property<int>("Genero")
                        .HasColumnType("integer");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Setor")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("TelefoneCelular")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("bigint")
                        .HasDefaultValue(99999999999L);

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ca431822-360a-4ee6-b978-66564d429fc7",
                            DataAniversario = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            EmailConfirmed = false,
                            Funcao = 0,
                            Genero = 0,
                            LockoutEnabled = false,
                            NormalizedUserName = "ALAN.REZENDEEE@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFGbgHKOKiDDs5fvXN8kHviorntHToMKurnVJNmsFQNInxhQOyZTwJ2w0SpbyCdZbA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9514850-61dd-4cc1-b909-88b79b035643",
                            Setor = 0,
                            Status = 0,
                            TelefoneCelular = 0L,
                            TwoFactorEnabled = false,
                            UserName = "alan.rezendeeee@hotmail.com"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserGroup", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("AspNetUserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            GroupId = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "b0f96d85-3647-4651-9f78-b7529b577ec0"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApiKey")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("EnderecoBairro")
                        .HasColumnType("text");

                    b.Property<string>("EnderecoCEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("EnderecoCidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnderecoEstado")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("EnderecoLogradouro")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EnderecoLogradouroNumero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NomeExibicao")
                        .HasColumnType("text");

                    b.Property<string>("OficioLeituraAssinaturaCargo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraAssinaturaMatricula")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraAssinaturaNome")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraVocativo1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OficioLeituraVocativo2")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraVocativo3")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TelefoneDDD")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("TelefoneNumero")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.ToTable("Tenants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("206c645a-2966-4ad9-19a3-dced7c201bc4"),
                            ApiKey = new Guid("06b5fb02-57cb-126b-3ab2-a05f805f1e97"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 16, 40, 56, 517, DateTimeKind.Unspecified).AddTicks(5954), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9"),
                            IsDeleted = false,
                            Nome = "Tenância Presídio Regional de Criciúma",
                            NomeExibicao = "PRESÍDIO REGIONAL CRICIÚMA",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 1, 21, 16, 40, 56, 517, DateTimeKind.Unspecified).AddTicks(5959), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("BadgeColor")
                        .HasColumnType("text");

                    b.Property<string>("BadgeContent")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExternalLink")
                        .HasColumnType("boolean");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LevelMeKey")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LevelUpKey")
                        .HasColumnType("uuid");

                    b.Property<bool>("OpenInNewTab")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<string>("SectionTitle")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("VerticalNavItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VerticalNavItemId");

                    b.ToTable("VerticalNavItems", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationGroups")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationNotification", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationNotifications")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRoleGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationRoleGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationRoleGroups")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationRole");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany("ApplicationUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.HasOne("Sagep.Domain.Models.VerticalNavItem", null)
                        .WithMany("Children")
                        .HasForeignKey("VerticalNavItemId");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.Navigation("ApplicationRoleGroups");

                    b.Navigation("ApplicationUserGroups");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRole", b =>
                {
                    b.Navigation("ApplicationRoleGroups");

                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationNotifications");

                    b.Navigation("ApplicationUserClaims");

                    b.Navigation("ApplicationUserGroups");

                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("Sagep.Domain.Models.Tenant", b =>
                {
                    b.Navigation("ApplicationGroups");

                    b.Navigation("ApplicationNotifications");

                    b.Navigation("ApplicationUsers");
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
