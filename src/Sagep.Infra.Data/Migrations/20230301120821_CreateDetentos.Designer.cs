// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sagep.Infra.Data.Context;

#nullable disable

namespace Sagep.Infra.Data.Migrations
{
    [DbContext(typeof(SagepAppDbContext))]
    [Migration("20230301120821_CreateDetentos")]
    partial class CreateDetentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<string>("UniqueKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetGroups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 3, 1, 12, 8, 21, 158, DateTimeKind.Unspecified).AddTicks(513), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9"),
                            IsDeleted = false,
                            Name = "Master",
                            TenantId = new Guid("206c645a-2966-4ad9-19a3-dced7c201bc4"),
                            UniqueKey = "ors0eAr4DPkvrwhy5gVnQAqRDnJUO43j9HzbkPyZ/7Q=",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 3, 1, 12, 8, 21, 158, DateTimeKind.Unspecified).AddTicks(517), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTimeOffset>("MessageDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MessageLabel")
                        .HasColumnType("text");

                    b.Property<string>("MessageLabelColor")
                        .HasColumnType("text");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Scope")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("SenderUser")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationNotifications", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int[]>("Actions")
                        .HasColumnType("integer[]");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b0f96d85-3647-4651-9f78-b7529b577ec0",
                            Actions = new[] { 0 },
                            ConcurrencyStamp = "4629cea3-3b65-43b9-9c4e-7cc68fe4e4e4",
                            Description = "Pode realizar todas as ações/operações, bem como ter acesso a todos os dados e funcionalidades",
                            Name = "Master",
                            NormalizedName = "MASTER",
                            Subject = "all"
                        },
                        new
                        {
                            Id = "443308dc-7023-413d-b36a-45f8a551ccef",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "860ae01a-1704-4ee1-b018-009c0d4ac546",
                            Description = "Pode realizar todas as ações/operações em todas as dashboards",
                            Name = "CanDashboardAll",
                            NormalizedName = "CANDASHBOARDALL",
                            Subject = "ac-dashboard-page"
                        },
                        new
                        {
                            Id = "c4324f91-300b-4774-b56b-51e1a2e0c422",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "06fb5610-f2d8-4978-b454-7d3a3f58495c",
                            Description = "Pode visualizar todas as dashboards do cliente",
                            Name = "CanDashboardClienteAll",
                            NormalizedName = "CANDASHBOARDCLIENTEALL",
                            Subject = "ac-dashboardCliente-page"
                        },
                        new
                        {
                            Id = "097db820-7eeb-4cef-b2f7-cb849d84d6fa",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "f2703368-a88e-42cc-93ee-513339b4de74",
                            Description = "Pode visualizar todas as dashboards de controle de acesso",
                            Name = "CanDashboardControleAcessoAll",
                            NormalizedName = "CANDASHBOARDCONTROLEACESSOALL",
                            Subject = "ac-dashboardControleAcesso-page"
                        },
                        new
                        {
                            Id = "094e1616-55a8-47bd-85b6-880473c3d74e",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "6c01b677-9988-4a26-857e-01e1ab430d61",
                            Description = "Pode realizar todas as ações/operações relacionadas a entidade usuário",
                            Name = "CanUserAll",
                            NormalizedName = "CANUSERALL",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "5b9556b8-ccd1-4d01-8533-4f714d60e092",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "836d326c-cbf8-4c99-b417-4ebe07148f25",
                            Description = "Pode listar os dados de todos os usuários",
                            Name = "CanUserList",
                            NormalizedName = "CANUSERLIST",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "e92ffca9-0b5b-4e7f-99f7-5e0ed895877c",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "f4aa1b28-60af-4c16-8696-a2b56cf90355",
                            Description = "Pode listar os dados de um usuários",
                            Name = "CanUserRead",
                            NormalizedName = "CANUSERREAD",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "47a41d39-5405-4625-9ce2-2393448ed3d9",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "f899826f-d151-4fc0-9620-fa65d9ed78c8",
                            Description = "Pode criar um usuário",
                            Name = "CanUserCreate",
                            NormalizedName = "CANUSERCREATE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "740bbbaf-ef86-4600-93aa-70677acf99d3",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "c499e97f-d489-412c-919f-645a613e02c1",
                            Description = "Pode atualizar os dados de um usuário",
                            Name = "CanUserUpdate",
                            NormalizedName = "CANUSERUPDATE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "0b6a7a90-e901-464f-bb44-3518e43c6606",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "f2f9a7f3-d0e7-41bd-bdde-ce77196691c4",
                            Description = "Pode deletar um usuário",
                            Name = "CanUserDelete",
                            NormalizedName = "CANUSERDELETE",
                            Subject = "ac-user-page"
                        },
                        new
                        {
                            Id = "e6ac03ff-a40d-4207-813f-3e4cf882dfab",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "c927ba7b-66e3-48bc-9fba-020e7168ebc8",
                            Description = "Pode realizar todas as ações/operações em todos as roles/permissões",
                            Name = "CanRoleAll",
                            NormalizedName = "CANROLEALL",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "32e92a7c-bc73-4659-b77d-230b1abcf85f",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "836a7a27-b701-4945-b85d-d43c54cc6b93",
                            Description = "Pode listar os dados de todas as roles/permissões",
                            Name = "CanRoleList",
                            NormalizedName = "CANROLELIST",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "e9a5e11c-4bca-41fc-b371-7d27c9685033",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "2f3f9ea1-d005-4b35-84b3-d685cced4c25",
                            Description = "Pode listar os dados de uma roles/permissão",
                            Name = "CanRoleRead",
                            NormalizedName = "CANROLEREAD",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "b7853877-f15a-4cd8-a563-319555eb7f9f",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "85abb3fb-44eb-4859-8fa8-758c5c95eab7",
                            Description = "Pode criar uma role/permissão",
                            Name = "CanRoleCreate",
                            NormalizedName = "CANROLECREATE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "e1a7f770-5911-4969-ab1c-74d6ede76ca1",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "555c1f3f-8520-4e4b-b7bd-80b36b47c89d",
                            Description = "Pode atualizar os dados de uma roles/permissão",
                            Name = "CanRoleUpdate",
                            NormalizedName = "CANROLEUPDATE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "656dc461-ffab-49a6-a8a3-7bd98603a3b5",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "095824af-303c-481d-8502-38f509702eb5",
                            Description = "Pode deletar uma role/permissão",
                            Name = "CanRoleDelete",
                            NormalizedName = "CANROLEDELETE",
                            Subject = "ac-role-page"
                        },
                        new
                        {
                            Id = "30c9bbea-385b-459b-956c-5aee59067e25",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "57ac6bf1-3672-4879-a20b-6834014ee983",
                            Description = "Pode realizar todas as ações/operações em todos os grupos",
                            Name = "CanGroupAll",
                            NormalizedName = "CANGROUPALL",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "f8d9ed1d-3476-4549-9f84-9c439318f04a",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "802811cc-af3c-4e78-bafa-82efc26a69ff",
                            Description = "Pode listar os dados de todos os grupos",
                            Name = "CanGroupList",
                            NormalizedName = "CANGROUPLIST",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "450fb207-75a1-44f9-bbb2-c187983dbcbd",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "6ffd5df8-9044-4e28-b3bd-07a51f526707",
                            Description = "Pode listar os dado de um grupo",
                            Name = "CanGroupRead",
                            NormalizedName = "CANGROUPREAD",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "e780a70a-355f-4722-8546-7b3a5fa40a5a",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "2a7177df-72a2-4f5e-b76a-a1d1847f0425",
                            Description = "Pode criar um grupo",
                            Name = "CanGroupCreate",
                            NormalizedName = "CANGROUPCREATE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "8797c0a7-68bf-404a-b28b-5661eef7cf14",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "7f5a90cd-5dc2-4d66-8ace-e4ca94601638",
                            Description = "Pode atualizar os dados de um grupo",
                            Name = "CanGroupUpdate",
                            NormalizedName = "CANGROUPUPDATE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "2f809f7d-8757-4337-80a4-dbc7901f98c9",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "171eb287-64fe-46af-8ea9-c8f93d7859bf",
                            Description = "Pode deletar um grupo",
                            Name = "CanGroupDelete",
                            NormalizedName = "CANGROUPDELETE",
                            Subject = "ac-group-page"
                        },
                        new
                        {
                            Id = "70ee65cf-ee33-4835-8d07-84a7e0683bfc",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "72a40994-28c0-4f70-949d-7dd0eda3b0c9",
                            Description = "Pode visualizar todos os indicadores da dashboard comercial",
                            Name = "CanClienteAll",
                            NormalizedName = "CANCLIENTEALL",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "2b871f1b-274e-4b48-aacd-7b4fe8fb2433",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "cf38bcd8-2343-496b-8b0d-ccd94c4c0011",
                            Description = "Pode listar os dados de todos os clientes",
                            Name = "CanClienteList",
                            NormalizedName = "CANCLIENTELIST",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "17ed6a95-ae34-4add-95a0-0ac581610ff7",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "0e4d7924-6799-4a80-ab27-83a86d13ca4a",
                            Description = "Pode listar os dado de um cliente",
                            Name = "CanClienteRead",
                            NormalizedName = "CANCLIENTEREAD",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "65569c5d-8870-4e15-922e-7de7ffaebdaf",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "18915622-0909-40fe-b47f-895e49a6f9b2",
                            Description = "Pode criar um cliente",
                            Name = "CanClienteCreate",
                            NormalizedName = "CANCLIENTECREATE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "76391f32-c0a4-489e-ba31-9183dc2ab841",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "c4a6c3f1-7fe3-44ee-bb54-2428c58265b3",
                            Description = "Pode atualizar os dados de um cliente",
                            Name = "CanClienteUpdate",
                            NormalizedName = "CANCLIENTEUPDATE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "b3a325a3-b249-4ff4-b74f-40c243bbde0d",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "f190e987-cddb-4678-bd67-2ddfa8b783cc",
                            Description = "Pode deletar um cliente",
                            Name = "CanClienteDelete",
                            NormalizedName = "CANCLIENTEDELETE",
                            Subject = "ac-cliente-page"
                        },
                        new
                        {
                            Id = "d05a41b6-fcc2-45f4-9db0-8be63aca4d96",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "e13ab55d-d78a-4b54-a801-c1d5d4d2e8e6",
                            Description = "Pode listar o título do sistema",
                            Name = "CanTitleSystemList",
                            NormalizedName = "CANTITLESYSTEMLIST",
                            Subject = "ac-titleSystem-page"
                        },
                        new
                        {
                            Id = "c920a8a3-1df1-4737-beef-aaa183a390a2",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "4f26a4d2-d73b-4f82-a1f8-7bf4b1c19963",
                            Description = "Pode listar o título dos negócios",
                            Name = "CanTitleBussinesList",
                            NormalizedName = "CANTITLEBUSSINESLIST",
                            Subject = "ac-titleBussines-page"
                        },
                        new
                        {
                            Id = "09babf02-5f32-459b-9c19-c88f5ddb5ff0",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "ea81e8ac-21ee-4657-a63b-a2984e544794",
                            Description = "Pode realizar todas as ações/operações em todos os serviços de clientes",
                            Name = "CanClienteServicoAll",
                            NormalizedName = "CANCLIENTESERVICOALL",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "3d85e11c-ba08-4611-becc-a200d6901da0",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f12eb801-fbef-413e-a5a2-6b03cf9e39c5",
                            Description = "Pode listar os dados de todos os serviços de clientes",
                            Name = "CanClienteServicoList",
                            NormalizedName = "CANCLIENTESERVICOLIST",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "e45b5173-1761-4e27-a702-8041fb3aabea",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "4c759055-e5e2-4612-9473-3a1934ee1769",
                            Description = "Pode listar os dado de um serviço de cliente",
                            Name = "CanClienteServicoRead",
                            NormalizedName = "CANCLIENTESERVICOREAD",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "f90f35a8-5db7-46e8-87f1-868218c6ab37",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "96d2d21b-b4a6-4c11-8f6c-cb54a919316e",
                            Description = "Pode criar um serviço para um cliente",
                            Name = "CanClienteServicoCreate",
                            NormalizedName = "CANCLIENTESERVICOCREATE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "208749bc-d3f4-4651-9a81-ed84d0d565b3",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "5820cca4-0d33-4319-ab5d-a7c52c34b3d8",
                            Description = "Pode atualizar um serviço de um cliente",
                            Name = "CanClienteServicoUpdate",
                            NormalizedName = "CANCLIENTESERVICOUPDATE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "af640b01-a929-4b64-96c5-628349bf899e",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "021e9989-db09-48cf-8e10-a33bfce0be33",
                            Description = "Pode deletar um serviço de um cliente",
                            Name = "CanClienteServicoDelete",
                            NormalizedName = "CANCLIENTESERVICODELETE",
                            Subject = "ac-clienteServico-page"
                        },
                        new
                        {
                            Id = "3a5e8d4b-39f1-4827-8410-01f52887405e",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "e058e35f-7a0f-4058-9d60-782d62f631b7",
                            Description = "Pode realizar todas as ações/operações em todos os serviços",
                            Name = "CanServicoAll",
                            NormalizedName = "CANSERVICOALL",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "5f57b248-78f1-48ca-b571-83e8ddf8bf36",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "e7dc6bd5-f79b-44d7-af6f-5f258e196f7a",
                            Description = "Pode listar os dados de todos os serviços",
                            Name = "CanServicoList",
                            NormalizedName = "CANSERVICOLIST",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "ad9200a9-b4e0-43e7-8bbc-ca0772c55753",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "fcbf0131-8daa-4f0a-a5f1-3f701af8b073",
                            Description = "Pode listar os dados de um serviço",
                            Name = "CanServicoRead",
                            NormalizedName = "CANSERVICOREAD",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "c63bb5e4-e9c9-4a06-a44e-6413e2f1a1d3",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "01c3ed40-2725-4c11-b44e-369b8fecd2f6",
                            Description = "Pode atualizar um serviço",
                            Name = "CanServicoUpdate",
                            NormalizedName = "CANSERVICOUPDATE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "18fc5ea1-ada9-4282-af37-63ac000e1ed6",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "bb75e05e-446c-41e5-a085-dc75fc2c61c9",
                            Description = "Pode criar um serviço",
                            Name = "CanServicoCreate",
                            NormalizedName = "CANSERVICOCREATE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "61d3682e-4dfb-47f0-be33-6eddb61da23d",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "66966d13-b5de-4d18-a65c-62e638aa35e0",
                            Description = "Pode deletar um serviço",
                            Name = "CanServicoDelete",
                            NormalizedName = "CANSERVICODELETE",
                            Subject = "ac-servico-page"
                        },
                        new
                        {
                            Id = "f55b12f8-2ac9-4209-820d-9985323ebfec",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "f9ff53bc-4cbc-400e-ae62-9c19adf142c9",
                            Description = "Pode realizar todas as ações/operações em todos os pipelines",
                            Name = "CanPipelineAll",
                            NormalizedName = "CANPIPELINEALL",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "677f625d-1ed9-442a-8091-5e2a49308998",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "2a89e289-5f45-4634-84e9-e3c9a6a2d88d",
                            Description = "Pode listar os dados de todos os pipelines",
                            Name = "CanPipelineList",
                            NormalizedName = "CANPIPELINELIST",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "6cf8c37d-0027-4b62-8ea4-c464b6d57fdd",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "59649fb0-046a-4b30-ae02-ae2b5b6327b7",
                            Description = "Pode listar os dados de um pipeline",
                            Name = "CanPipelineRead",
                            NormalizedName = "CANPIPELINEREAD",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "9e6c52bf-9bb9-44f5-b16d-e479dfd28df4",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "ff2c08c4-608f-4d16-8911-6b2180c8543a",
                            Description = "Pode criar um pipeline",
                            Name = "CanPipelineCreate",
                            NormalizedName = "CANPIPELINECREATE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "0157b6cf-349e-48d7-9e25-b4563693dd94",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "78a68ff0-1e6f-42b8-bc84-87d53b32a879",
                            Description = "Pode atualizar um pipeline",
                            Name = "CanPipelineUpdate",
                            NormalizedName = "CANPIPELINEUPDATE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "3aa3d59d-495a-456f-8b74-e0eec3538bfa",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "aa9ef125-941f-4239-b941-010002f91741",
                            Description = "Pode deletar um pipeline",
                            Name = "CanPipelineDelete",
                            NormalizedName = "CANPIPELINEDELETE",
                            Subject = "ac-pipeline-page"
                        },
                        new
                        {
                            Id = "4ae8c157-9f03-4d6e-bd68-e1f61a635b62",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "4cbe4a1f-67a6-4f05-bfaf-05f233e4d81a",
                            Description = "Pode realizar todas as ações/operações em todos os fornecedores",
                            Name = "CanFornecedorAll",
                            NormalizedName = "CANFORNECEDORALL",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "aeaaf910-0aae-4424-bcc4-60f1bbc31f22",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "b2c6e60c-8c22-4d22-a445-79d0deba660c",
                            Description = "Pode listar os dados de todos os fornecedores",
                            Name = "CanFornecedorList",
                            NormalizedName = "CANFORNECEDORLIST",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "baf87d89-2d3c-420c-b0a3-1b5546c4c597",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "ccb7ff4a-e027-4822-955d-443acbfb14c1",
                            Description = "Pode listar os dados de um fornecedor",
                            Name = "CanFornecedorRead",
                            NormalizedName = "CANFORNECEDORREAD",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "00adff25-9474-4ca1-9569-aba586966258",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "1256f966-18b5-4e65-b0de-6766121f6766",
                            Description = "Pode criar um fornecedor",
                            Name = "CanFornecedorCreate",
                            NormalizedName = "CANFORNECEDORCREATE",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "b5e78de4-6a03-4c68-af7d-7711fef6bb6a",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "94cf21cd-dd81-41e5-a68d-86abb75f634d",
                            Description = "Pode atualizar um fornecedor",
                            Name = "CanFornecedorUpdate",
                            NormalizedName = "CANFORNECEDORUPDATE",
                            Subject = "ac-fornecedor-page"
                        },
                        new
                        {
                            Id = "2d2746b8-0440-4e5b-bfc5-ae6e4abc544f",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "6cad7e95-2587-43b7-a733-0de5a2ad91a8",
                            Description = "Pode deletar um fornecedor",
                            Name = "CanForncedorDelete",
                            NormalizedName = "CANFORNCEDORDELETE",
                            Subject = "ac-forncedor-page"
                        },
                        new
                        {
                            Id = "20934614-b307-43df-9820-86f9df582232",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "120da056-9071-4b41-803d-f35ef5890d54",
                            Description = "Pode realizar todas as ações/operações em todos os serviços de fornecedores",
                            Name = "CanFornecedorServicoAll",
                            NormalizedName = "CANFORNECEDORSERVICOALL",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "0143ca55-af88-4015-a5ed-8d0f9ac4c527",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "89551d12-cf5b-4c42-a4de-f548e113307f",
                            Description = "Pode listar os dados de todos os serviços de fornecedores",
                            Name = "CanFornecedorServicoList",
                            NormalizedName = "CANFORNECEDORSERVICOLIST",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "e1d84fc2-b944-4063-bbc2-647a8910a771",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "cfc7da1b-a975-4401-a3eb-50ceb96983d9",
                            Description = "Pode listar os dado de um serviço de fornecedor",
                            Name = "CanFornecedorServicoRead",
                            NormalizedName = "CANFORNECEDORSERVICOREAD",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "362df496-4564-46a8-bd67-ca0c28545ff3",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "364e35f9-68e4-4f95-a4ef-cae3d1e6dcd6",
                            Description = "Pode criar um serviço para um fornecedor",
                            Name = "CanFornecedorServicoCreate",
                            NormalizedName = "CANFORNECEDORSERVICOCREATE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "32a19e65-65da-4804-bc62-ce3c097a5c66",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "4a6cea4b-5452-4df0-b0f4-a22620bf5a03",
                            Description = "Pode atualizar um serviço de um fornecedor",
                            Name = "CanFornecedorServicoUpdate",
                            NormalizedName = "CANFORNECEDORSERVICOUPDATE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "c61789ec-5c41-4249-a071-26ae8d130930",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "c8a086ff-1628-47c9-835c-b7cd7b6d1b11",
                            Description = "Pode deletar um serviço de um fornecedor",
                            Name = "CanFornecedorServicoDelete",
                            NormalizedName = "CANFORNECEDORSERVICODELETE",
                            Subject = "ac-fornecedorServico-page"
                        },
                        new
                        {
                            Id = "6bf03815-b3a1-46de-ab65-0f95e6600ec4",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "1c9a1d4f-5aec-4079-891c-d005b61f6b12",
                            Description = "Pode realizar todas as ações/operações em todos os produtos",
                            Name = "CanProdutoAll",
                            NormalizedName = "CANPRODUTOALL",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "55a96f82-8ac6-47cf-a507-8624e5015015",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "eca28397-38ec-491b-a5e8-705fb872846a",
                            Description = "Pode listar os dados de todos os produtos",
                            Name = "CanProdutoList",
                            NormalizedName = "CANPRODUTOLIST",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "e92c64d5-ef5d-4178-aae4-d6795ca62d06",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "39accd84-405d-4165-92c7-67a79ffc4609",
                            Description = "Pode listar os dados de um produtos",
                            Name = "CanProdutoRead",
                            NormalizedName = "CANPRODUTOREAD",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "5c733a0b-dcf4-4d43-be14-727f4e4ab761",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "92a6718b-6c1e-488d-bda4-2f3ec1475150",
                            Description = "Pode criar um produtos",
                            Name = "CanProdutoCreate",
                            NormalizedName = "CANPRODUTOCREATE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "11c36420-4257-48a7-8269-354c91d0c96c",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "8ed9f163-3150-4641-bb22-e944570dfaaf",
                            Description = "Pode atualizar um produtos",
                            Name = "CanProdutoUpdate",
                            NormalizedName = "CANPRODUTOUPDATE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "d034b6b7-b946-45d4-b2a4-3f3a693f2188",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "f499cc76-ce42-4b46-9291-374a617f89f0",
                            Description = "Pode deletar um produtos",
                            Name = "CanProdutoDelete",
                            NormalizedName = "CANPRODUTODELETE",
                            Subject = "ac-produto-page"
                        },
                        new
                        {
                            Id = "1a3b87b3-6cf3-465c-97eb-094479b7a030",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "52587d85-a63d-4ba8-8054-8a71e7752fee",
                            Description = "Pode realizar todas as ações/operações em todos os contratos de clientes",
                            Name = "CanClienteContratoAll",
                            NormalizedName = "CANCLIENTECONTRATOALL",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "89cf8b45-b8c5-4d35-9594-436648a36748",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "6d9422db-f3b8-4396-8837-c0cf9760cef1",
                            Description = "Pode listar os dados de todos os contratos de clientes",
                            Name = "CanClienteContratoList",
                            NormalizedName = "CANCLIENTECONTRATOLIST",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "12ea18ba-fc9e-41f1-bd9e-98c76c6cfa15",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "b655a3d2-11cf-4e6d-b5ab-34afe7db760a",
                            Description = "Pode listar os dados de um contrato de cliente",
                            Name = "CanClienteContratoRead",
                            NormalizedName = "CANCLIENTECONTRATOREAD",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "6d328d73-4207-4742-aaf3-0c61f8c0020b",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "5d87ed06-bb58-4fab-adcf-2e09eebb9c7a",
                            Description = "Pode criar um contrato de cliente",
                            Name = "CanClienteContratoCreate",
                            NormalizedName = "CANCLIENTECONTRATOCREATE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "7be27bce-4063-41d7-8b5e-40e0b4b6f07a",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "42743eb7-6993-4cea-9260-a007506da362",
                            Description = "Pode atualizar um contrato de cliente",
                            Name = "CanClienteContratoUpdate",
                            NormalizedName = "CANCLIENTECONTRATOUPDATE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "efc22a1c-05c1-4b01-a825-e0ef231c5bbd",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "58ee3a98-68aa-449d-9979-a7c47ff6d9e0",
                            Description = "Pode deletar um contrato de cliente",
                            Name = "CanClienteContratoDelete",
                            NormalizedName = "CANCLIENTECONTRATODELETE",
                            Subject = "ac-clienteContrato-page"
                        },
                        new
                        {
                            Id = "82d686e7-ad99-4874-b908-0ccf2654adf1",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "2ebd00c7-35e9-461b-a041-875935b9b103",
                            Description = "Pode realizar todas as ações/operações em todos os produtos de clientes",
                            Name = "CanClienteProdutoAll",
                            NormalizedName = "CANCLIENTEPRODUTOALL",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "d038d919-fd61-41cf-96ab-15457babd3eb",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "65a05bff-44a6-4237-b1a7-f96bec9d2d78",
                            Description = "Pode listar os dados de todos os produtos de clientes",
                            Name = "CanClienteProdutoList",
                            NormalizedName = "CANCLIENTEPRODUTOLIST",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "baece50b-32ac-47b4-acac-1756f04323be",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "f152ff8b-dfbf-441e-8416-dd975f87f5f6",
                            Description = "Pode listar os dados de um produto de cliente",
                            Name = "CanClienteProdutoRead",
                            NormalizedName = "CANCLIENTEPRODUTOREAD",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "a5d8bdb0-7447-4a10-a920-76ca23973453",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "0e69882b-f1c9-47c2-95d0-1dec3f9048f0",
                            Description = "Pode criar um produto de cliente",
                            Name = "CanClienteProdutoCreate",
                            NormalizedName = "CANCLIENTEPRODUTOCREATE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "6947ae96-4040-4b42-89cb-8c9359a45093",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "aeac3739-9e4f-43dc-899f-fc19594cbf79",
                            Description = "Pode atualizar um produto de cliente",
                            Name = "CanClienteProdutoUpdate",
                            NormalizedName = "CANCLIENTEPRODUTOUPDATE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "dd8618e3-9ee0-47ef-9da4-ae574441730e",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "f5220b6d-029f-44ec-a191-c880bbdce12a",
                            Description = "Pode deletar um produto de cliente",
                            Name = "CanClienteProdutoDelete",
                            NormalizedName = "CANCLIENTEPRODUTODELETE",
                            Subject = "ac-clienteProduto-page"
                        },
                        new
                        {
                            Id = "a892ff79-fce7-436d-8388-2641afd393ad",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "76b4242c-cb89-4235-a40c-7231ffee7611",
                            Description = "Pode realizar todas as ações/operações em todos os produtos de fornecedores",
                            Name = "CanFornecedorProdutoAll",
                            NormalizedName = "CANFORNECEDORPRODUTOALL",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "fc941d3a-4e6a-4397-b4ef-dbc12ee1fd85",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f61e4748-3e5e-433c-9806-aa92228fde77",
                            Description = "Pode listar os dados de todos os produtos de fornecedores",
                            Name = "CanFornecedorProdutoList",
                            NormalizedName = "CANFORNECEDORPRODUTOLIST",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "2990b105-a2d8-48e1-8fc1-7cf818fd9c13",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "e610d791-b618-4d96-a762-adb11f6bc696",
                            Description = "Pode listar os dados de um produto de fornecedor",
                            Name = "CanFornecedorProdutoRead",
                            NormalizedName = "CANFORNECEDORPRODUTOREAD",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "97070db7-1e9d-43ac-9043-3ff0a9b361be",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "fdbd3011-204d-4fe1-9f29-041c177dd72e",
                            Description = "Pode visualizar um produto de fornecedor",
                            Name = "CanFornecedorProdutoCreate",
                            NormalizedName = "CANFORNECEDORPRODUTOCREATE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "39a14ee2-de28-42a7-847b-c8b7f762db28",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "9ac5cf87-16ef-452c-b783-6f1558e74c73",
                            Description = "Pode criar um produto de fornecedor",
                            Name = "CanFornecedorProdutoUpdate",
                            NormalizedName = "CANFORNECEDORPRODUTOUPDATE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "837f7bbf-4f75-414b-8033-c5489d315e44",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "ade3e4ee-a018-485a-8567-2bd0ac41ffe9",
                            Description = "Pode deletar um produto de fornecedor",
                            Name = "CanFornecedorProdutoDelete",
                            NormalizedName = "CANFORNECEDORPRODUTODELETE",
                            Subject = "ac-fornecedorProduto-page"
                        },
                        new
                        {
                            Id = "2b61ae2c-77af-4d00-a52b-18f9eaae9666",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "a3be6af3-20ee-40b2-a3e5-8fe359f0f40e",
                            Description = "Pode realizar todas as ações/operações em dashboard comercial",
                            Name = "CanDashboardComercialAll",
                            NormalizedName = "CANDASHBOARDCOMERCIALALL",
                            Subject = "ac-dashboardComercial-page"
                        },
                        new
                        {
                            Id = "9a2521c7-5390-4596-ae54-a9597031795c",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "808288b5-3cd4-43ee-a0da-8fa1d6a08ebd",
                            Description = "CanDashboardComercialClienteContratoList",
                            Name = "CanDashboardComercialClienteContratoList",
                            NormalizedName = "CANDASHBOARDCOMERCIALCLIENTECONTRATOLIST",
                            Subject = "ac-dashboardComercialClienteContrato-page"
                        },
                        new
                        {
                            Id = "918ffd35-b28c-4370-8212-5bdd7f82f9a3",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "9656d364-2691-4352-9e16-c3dcffa20557",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroAll",
                            NormalizedName = "CANCHAVEAPITERCEIROALL",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "05bfd258-26ac-491d-96af-0657bf7f5cd5",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "f65e53dc-a1e1-406f-bf1e-972567f74d60",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroList",
                            NormalizedName = "CANCHAVEAPITERCEIROLIST",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "c51b003f-716b-4144-97c0-216f7eba00fb",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "ee7f29df-8d5a-43ef-a44b-f3abec4f77d1",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroRead",
                            NormalizedName = "CANCHAVEAPITERCEIROREAD",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "14666b44-4327-472f-8960-657ed34d838c",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "2c9578eb-6c8c-4406-8272-1e08699616ff",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroCreate",
                            NormalizedName = "CANCHAVEAPITERCEIROCREATE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "6fef8b93-c0ac-458c-b119-4a91352e1fbd",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "e98c1546-3928-49ad-800b-6d0d6482b630",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroUpdate",
                            NormalizedName = "CANCHAVEAPITERCEIROUPDATE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "c00a8c09-ad8a-47e7-a504-3a4c7dc0885c",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "b9d9ab03-978c-41e6-942c-261d5498d824",
                            Description = "Pode listar os dados de todas as chaves de api de terceiro",
                            Name = "CanChaveApiTerceiroDelete",
                            NormalizedName = "CANCHAVEAPITERCEIRODELETE",
                            Subject = "ac-chaveApiTerceiro-page"
                        },
                        new
                        {
                            Id = "fcc58f91-b772-43ce-aa97-f2ee516621de",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "42b75474-52f2-45e0-9ef2-a18110b7772b",
                            Description = "Pode realizar todas as ações/operações em dashboard publica",
                            Name = "CanDashboardPublicaAll",
                            NormalizedName = "CANDASHBOARDPUBLICAALL",
                            Subject = "ac-dashboardPublica-page"
                        },
                        new
                        {
                            Id = "2039f0b2-b225-4ec1-b337-a377499d4c38",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "bc9b1722-ac14-4bac-b943-937de87609de",
                            Description = "CanDashboardPublicaClienteContratoList",
                            Name = "CanDashboardPublicaClienteContratoList",
                            NormalizedName = "CANDASHBOARDPUBLICACLIENTECONTRATOLIST",
                            Subject = "ac-dashboardPublicaClienteContrato-page"
                        },
                        new
                        {
                            Id = "ffa00035-7bf7-49d4-a948-fb25f1eff596",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "7a2d8e26-6523-4971-b931-f4838e6852a1",
                            Description = "Pode realizar todas as ações/operações em todos os vendedores",
                            Name = "CanVendedorAll",
                            NormalizedName = "CANVENDEDORALL",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "29028691-afea-4af2-88f9-d609e40b9758",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "35dab054-585e-4460-8d27-09d26da83517",
                            Description = "Pode listar os dados de todos os vendedores",
                            Name = "CanVendedorList",
                            NormalizedName = "CANVENDEDORLIST",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "5f675932-dc41-4191-9ad5-b5037d264a72",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "f5067d7a-705e-4c85-8ac5-27a251f96f6d",
                            Description = "Pode listar os dados de um vendedor",
                            Name = "CanVendedorRead",
                            NormalizedName = "CANVENDEDORREAD",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "8e4ffa2a-a2a4-4ba1-bf21-9e69a605a8a6",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "6bab4a1b-f224-4ff7-a66d-1ef5eb431030",
                            Description = "Pode visualizar um vendedor",
                            Name = "CanVendedorCreate",
                            NormalizedName = "CANVENDEDORCREATE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "e9915e02-b720-45be-98a4-a1bbe11b33c7",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "18a4cb54-446c-4a3b-be04-20580685638a",
                            Description = "Pode criar um vendedor",
                            Name = "CanVendedorUpdate",
                            NormalizedName = "CANVENDEDORUPDATE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "6b281eb8-5b76-4bf7-9213-ce15008fadc0",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "ed046012-09b0-49ca-b84a-363d294dbd44",
                            Description = "Pode deletar um vendedor",
                            Name = "CanVendedorDelete",
                            NormalizedName = "CANVENDEDORDELETE",
                            Subject = "ac-vendedor-page"
                        },
                        new
                        {
                            Id = "9d73ab0d-44b5-4320-a5a0-36e30bbef120",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "ec4b7fea-3601-4884-bb94-d4830fe65b61",
                            Description = "Pode realizar todas as ações/operações em todas as comissões de vendedores",
                            Name = "CanVendedorComissaoAll",
                            NormalizedName = "CANVENDEDORCOMISSAOALL",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "92820905-0989-4c8a-a7c7-5b0044f9396f",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "2a0cfa6a-38af-4b58-a91d-38fe558efb2d",
                            Description = "Pode listar os dados de comissão de vendedores",
                            Name = "CanVendedorComissaoList",
                            NormalizedName = "CANVENDEDORCOMISSAOLIST",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "63fa6b74-839a-4fdd-a312-4a87e4c8c544",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "8ede57ef-574c-4918-a85e-040ff374ae6b",
                            Description = "Pode listar os dados de uma comissão de vendedor",
                            Name = "CanVendedorComissaoRead",
                            NormalizedName = "CANVENDEDORCOMISSAOREAD",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "3f7817f5-67d7-4733-a690-ca99ae9aec7f",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "c05d892e-87f1-4da4-b060-cdf9eefd5b48",
                            Description = "Pode visualizar uma comissão de vendedor",
                            Name = "CanVendedorComissaoCreate",
                            NormalizedName = "CANVENDEDORCOMISSAOCREATE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "814c66a6-1b8a-4ac1-bb40-d96b61008eab",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "11301e62-9509-40eb-bd99-e0ca05c667dd",
                            Description = "Pode criar uma comissão de vendedor",
                            Name = "CanVendedorComissaoUpdate",
                            NormalizedName = "CANVENDEDORCOMISSAOUPDATE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "3220fe06-f93f-48a9-8df8-f209c6a25ee1",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "4129a255-9401-45c4-940c-40d3bb168d3b",
                            Description = "Pode deletar uma comissão de vendedor",
                            Name = "CanVendedorComissaoDelete",
                            NormalizedName = "CANVENDEDORCOMISSAODELETE",
                            Subject = "ac-vendedorComissao-page"
                        },
                        new
                        {
                            Id = "505f66c8-1842-4179-b907-0ab1acb4dcbd",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "6600d352-abc1-41d4-81ba-b58002c91667",
                            Description = "Pode realizar todas as ações/operações em todos os contratos vinculados a vendedores",
                            Name = "CanVendedorContratoAll",
                            NormalizedName = "CANVENDEDORCONTRATOALL",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "90d15b8f-3995-4aae-8c2d-cbf4de7f0d81",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "42b7af8d-2751-4ca6-aad5-72e8d53e557b",
                            Description = "Pode listar os dados de todos os contratos vinculados a vendedores",
                            Name = "CanVendedorContratoList",
                            NormalizedName = "CANVENDEDORCONTRATOLIST",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "5bff0b0e-8cca-47ae-b0e3-223886c4d8e9",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "8afeb8dc-5903-4f4d-b11f-a6577f5980fc",
                            Description = "Pode listar os dados de um contrato vinculado a um vendedor",
                            Name = "CanVendedorContratoRead",
                            NormalizedName = "CANVENDEDORCONTRATOREAD",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "96d7e62a-5ff6-4ce2-83f2-09775b0fd9ec",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "cd90e9ee-93b7-4d53-ad73-a1265a948016",
                            Description = "Pode visualizar um contrato vinculado a um ou vários vendedores",
                            Name = "CanVendedorContratoCreate",
                            NormalizedName = "CANVENDEDORCONTRATOCREATE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "651dc952-3d45-4db9-8e9e-b57d9f50a9bc",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "8e98d5f3-70ea-4995-9081-94448436a597",
                            Description = "Pode criar um vínculo de contrato a um vendedor",
                            Name = "CanVendedorContratoUpdate",
                            NormalizedName = "CANVENDEDORCONTRATOUPDATE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "0ffdd400-5f40-4c00-aba0-4f8da104e199",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "31224cf8-3535-4cf4-ad0c-9acaca555614",
                            Description = "Pode deletar um vínculo de contrato com um vendedor",
                            Name = "CanVendedorContratoDelete",
                            NormalizedName = "CANVENDEDORCONTRATODELETE",
                            Subject = "ac-vendedorContrato-page"
                        },
                        new
                        {
                            Id = "61cc4235-4f02-45fa-88f6-5fe0c982c778",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "58bed3e0-37dd-4ecf-ab47-d86e8307ea58",
                            Description = "Pode realizar todas as ações/operações em todas as faturas de contratos de clientes",
                            Name = "CanClienteContratoFaturaAll",
                            NormalizedName = "CANCLIENTECONTRATOFATURAALL",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "d22e112a-988d-4e1f-8b25-49316b1c7487",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "52e82a63-2214-4093-8868-e98e7b7d2536",
                            Description = "Pode listar os dados de todas as faturas de contratos de clientes",
                            Name = "CanClienteContratoFaturaList",
                            NormalizedName = "CANCLIENTECONTRATOFATURALIST",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "114812d1-ca6b-4318-a562-edaaceddbe40",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "99416535-4975-4036-8c0f-61fda7054bb9",
                            Description = "Pode listar os dados de uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaRead",
                            NormalizedName = "CANCLIENTECONTRATOFATURAREAD",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "d96e3c33-87f4-440f-8112-e16060ab539b",
                            Actions = new[] { 3 },
                            ConcurrencyStamp = "cd34c4e8-e7e1-48cc-9394-9a3a057af3bb",
                            Description = "Pode visualizar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaCreate",
                            NormalizedName = "CANCLIENTECONTRATOFATURACREATE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "1926f1ab-5750-443a-9046-b019d7233611",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "0bc64ecb-8f55-4634-9ea9-7e04a601a2f6",
                            Description = "Pode criar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaUpdate",
                            NormalizedName = "CANCLIENTECONTRATOFATURAUPDATE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "de9732de-89a8-49ae-a415-d8b4eddbb3fa",
                            Actions = new[] { 5 },
                            ConcurrencyStamp = "a76f10d1-4457-4346-bd3a-6e7de03d6a96",
                            Description = "Pode deletar uma fatura de contrato de cliente",
                            Name = "CanClienteContratoFaturaDelete",
                            NormalizedName = "CANCLIENTECONTRATOFATURADELETE",
                            Subject = "ac-clienteContratoFatura-page"
                        },
                        new
                        {
                            Id = "4a1fb891-69c1-4c7b-bfbe-ae692f31267f",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "9a0bc0b6-9cc8-424e-a130-4b75ba872687",
                            Description = "Pode realizar todas as ações/operações relacionadas a entidade de sistema rotina",
                            Name = "CanRotinaAll",
                            NormalizedName = "CANROTINAALL",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "3c4c4b3f-2e36-4a5d-96cc-e62138acd244",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "8932b68c-b689-4776-b169-ba18ae953bf9",
                            Description = "Pode listar todas as rotinas de sistema",
                            Name = "CanRotinaList",
                            NormalizedName = "CANROTINALIST",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "3923b852-b388-4981-b529-a8d04d57fd3f",
                            Actions = new[] { 4 },
                            ConcurrencyStamp = "05cb8d6d-a542-4253-992d-cf76773ac4e2",
                            Description = "Pode atualizar os dados de rotinas",
                            Name = "CanRotinaUpdate",
                            NormalizedName = "CANROTINAUPDATE",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "0e3537f7-232d-4499-a551-8450efef1e0d",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "ee0aef5d-00d9-4c44-bfdb-7afa6bc205be",
                            Description = "Pode listar os dados de uma rotina",
                            Name = "CanRotinaRead",
                            NormalizedName = "CANROTINAREAD",
                            Subject = "ac-rotina-page"
                        },
                        new
                        {
                            Id = "e274bebe-ccd9-490d-8a4a-f51e1ae44e93",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "f32d8a85-c207-478e-90a9-aee5ac377f52",
                            Description = "Pode realizar todas as ações/operações relacionadas a entidade rotina event history",
                            Name = "CanRotinaEventHistoryAll",
                            NormalizedName = "CANROTINAEVENTHISTORYALL",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "3c4e83a1-8ee9-4ebf-ab34-3751f77f9e16",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "a721602b-9248-4efd-a0e2-a16bbf9cd9a2",
                            Description = "Pode listar todas as rotinas events histories",
                            Name = "CanRotinaEventHistoryList",
                            NormalizedName = "CANROTINAEVENTHISTORYLIST",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "472d5797-79e9-4436-82da-830f95d2965e",
                            Actions = new[] { 2 },
                            ConcurrencyStamp = "d27b2841-9d45-4df4-b22a-6fee3eced0d6",
                            Description = "Pode listar os dados de uma rotina event history",
                            Name = "CanRotinaEventHistoryRead",
                            NormalizedName = "CANROTINAEVENTHISTORYREAD",
                            Subject = "ac-rotinaEventHistory-page"
                        },
                        new
                        {
                            Id = "8a314350-c4cb-4c43-9ff0-b372defe3d67",
                            Actions = new[] { 1 },
                            ConcurrencyStamp = "b6cda970-1eb5-4131-9ceb-eb95207f3182",
                            Description = "Pode realizar todas as ações/operações relacionadas a relatórios de vendedores",
                            Name = "CanVendedorRelatorioComissaoList",
                            NormalizedName = "CANVENDEDORRELATORIOCOMISSAOLIST",
                            Subject = "ac-vendedorRelatorioComissao-page"
                        },
                        new
                        {
                            Id = "0b2903f8-424c-40fe-a8f3-0465314fada8",
                            Actions = new[] { 1, 2, 3, 4, 5 },
                            ConcurrencyStamp = "968ed0ff-9da4-418c-80e0-3b3baeac4b5d",
                            Description = "Pode listar todas as rotinas events histories",
                            Name = "CanVendedorRelatorioAll",
                            NormalizedName = "CANVENDEDORRELATORIOALL",
                            Subject = "ac-vendedorRelatorio-page"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRoleGroup", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("RoleId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("AspNetRoleGroups", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = "b0f96d85-3647-4651-9f78-b7529b577ec0",
                            GroupId = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DataAniversario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<int>("Funcao")
                        .HasColumnType("integer");

                    b.Property<int>("Genero")
                        .HasColumnType("integer");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<int>("Setor")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("TelefoneCelular")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("bigint")
                        .HasDefaultValue(99999999999L);

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("TenantId");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            AccessFailedCount = 0,
                            Avatar = "/images/avatars/1.png",
                            ConcurrencyStamp = "ca431822-360a-4ee6-b978-66564d429fc7",
                            DataAniversario = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "alan.rezendeeee@hotmail.com",
                            EmailConfirmed = true,
                            FullName = "Alan Rezende",
                            Funcao = 0,
                            Genero = 2,
                            LockoutEnabled = true,
                            NormalizedEmail = "ALAN.REZENDEEEE@HOTMAIL.COM",
                            NormalizedUserName = "ALAN.REZENDEEEE@HOTMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFqndd0aQiH3EC2qn6j21zHj1rZKlwofwEpNhCLuA7EQsV3Fvv+S1HuJ0snxDruE8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9514850-61dd-4cc1-b909-88b79b035643",
                            Setor = 0,
                            Status = 0,
                            TelefoneCelular = 0L,
                            TwoFactorEnabled = false,
                            UserName = "alan.rezendeeee@hotmail.com"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserGroup", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("AspNetUserGroups", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            GroupId = new Guid("23e63d9c-283b-496b-b7d8-7dac2ef7a822")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            RoleId = "b0f96d85-3647-4651-9f78-b7529b577ec0"
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.Detento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Ipen")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Detentos", (string)null);
                });

            modelBuilder.Entity("Sagep.Domain.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApiKey")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("EnderecoBairro")
                        .HasColumnType("text");

                    b.Property<string>("EnderecoCEP")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("EnderecoCidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnderecoEstado")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("EnderecoLogradouro")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("EnderecoLogradouroNumero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NomeExibicao")
                        .HasColumnType("text");

                    b.Property<string>("OficioLeituraAssinaturaCargo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraAssinaturaMatricula")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraAssinaturaNome")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraVocativo1")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OficioLeituraVocativo2")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("OficioLeituraVocativo3")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("TelefoneDDD")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("TelefoneNumero")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique();

                    b.ToTable("Tenants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("206c645a-2966-4ad9-19a3-dced7c201bc4"),
                            ApiKey = new Guid("06b5fb02-57cb-126b-3ab2-a05f805f1e97"),
                            CreatedAt = new DateTimeOffset(new DateTime(2023, 3, 1, 12, 8, 21, 154, DateTimeKind.Unspecified).AddTicks(9058), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9"),
                            IsDeleted = false,
                            Nome = "Tenância Presídio Regional de Criciúma",
                            NomeExibicao = "PRESÍDIO REGIONAL CRICIÚMA",
                            UpdatedAt = new DateTimeOffset(new DateTime(2023, 3, 1, 12, 8, 21, 154, DateTimeKind.Unspecified).AddTicks(9063), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedBy = new Guid("8e445865-a24d-4543-a6c6-9443d048cdb9")
                        });
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("BadgeColor")
                        .HasColumnType("text");

                    b.Property<string>("BadgeContent")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("ExternalLink")
                        .HasColumnType("boolean");

                    b.Property<string>("Icon")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("LevelMeKey")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LevelUpKey")
                        .HasColumnType("uuid");

                    b.Property<bool>("OpenInNewTab")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<string>("SectionTitle")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("VerticalNavItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VerticalNavItemId");

                    b.ToTable("VerticalNavItems", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationGroups")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationNotification", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationNotifications")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRoleGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationRoleGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationRoleGroups")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationRole");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.HasOne("Sagep.Domain.Models.Tenant", "Tenant")
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserClaim", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationUser", null)
                        .WithMany("ApplicationUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserGroup", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationGroup", "ApplicationGroup")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationGroup");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUserRole", b =>
                {
                    b.HasOne("Sagep.Domain.Models.ApplicationRole", "ApplicationRole")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sagep.Domain.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.HasOne("Sagep.Domain.Models.VerticalNavItem", null)
                        .WithMany("Children")
                        .HasForeignKey("VerticalNavItemId");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationGroup", b =>
                {
                    b.Navigation("ApplicationRoleGroups");

                    b.Navigation("ApplicationUserGroups");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationRole", b =>
                {
                    b.Navigation("ApplicationRoleGroups");

                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("Sagep.Domain.Models.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationNotifications");

                    b.Navigation("ApplicationUserClaims");

                    b.Navigation("ApplicationUserGroups");

                    b.Navigation("ApplicationUserRoles");
                });

            modelBuilder.Entity("Sagep.Domain.Models.Tenant", b =>
                {
                    b.Navigation("ApplicationGroups");

                    b.Navigation("ApplicationNotifications");

                    b.Navigation("ApplicationUsers");
                });

            modelBuilder.Entity("Sagep.Domain.Models.VerticalNavItem", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
